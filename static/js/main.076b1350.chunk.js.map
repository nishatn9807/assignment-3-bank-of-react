{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","useState","description","amount","creditObj","setCreditObj","credits","map","credit","id","dateYYD","date","slice","addCredit","parseFloat","Date","toISOString","split","required","Debits","debitObj","setDebitObj","debits","debit","addDebit","App","logInInfo","newUser","currentUser","componentDidMount","creditData","creditList","debitData","debitList","a","axios","get","creditResp","debitResp","creditsTotal","debitsTotal","data","reduce","total","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.076b1350.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, {useState} from 'react';\n\nconst Credits = (props) => {\n  const [creditObj, setCreditObj] = useState({ description: '', amount: 0 });\n  const {credits} = props;\n  let creditsView =  () => credits.map((credit) => {\n    const {id, description, amount, date} = credit;\n    let dateYYD = date.slice(0, 10);\n    return <li key={id}>{amount} {description} {dateYYD}</li>\n  })\n\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setCreditObj({...creditObj, [name]: value});\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    const {description, amount} = creditObj;\n    if(!description || !amount) return;\n    props.addCredit({\n      ...creditObj,\n      amount: parseFloat(amount,10),\n      date: new Date().toISOString().split(\"T\")[0]\n    });\n    setCreditObj({ description: '', amount: 0 });\n  }\n\n\n  return (\n    <div>\n      <h1>Credits</h1>\n\n      {creditsView()}\n\n      <form onSubmit={(e) => {\n        handleSubmit(e);\n      }}>\n        <input type=\"text\" name=\"description\" \n        value = {creditObj.description}\n        onChange={handleChange}\n        required/>\n        <input type=\"number\" name=\"amount\" \n       value = {creditObj.amount}\n       onChange={handleChange}\n       required/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport React, {useState} from 'react';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  const [debitObj, setDebitObj] = useState({ description: '', amount: 0 });\n  const {debits} = props;\n  let debitsView =  () => debits.map((debit) => {\n    const {id, description, amount, date} = debit;\n    let dateYYD = date.slice(0, 10);\n    return <li key={id}>{amount} {description} {dateYYD}</li>\n  })\n\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n    setDebitObj({...debitObj, [name]: value});\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); \n    const {description, amount} = debitObj;\n    if(!description || !amount) return;\n    props.addDebit({\n      ...debitObj,\n      amount: parseFloat(amount,10),\n      date: new Date().toISOString().split(\"T\")[0]\n    });\n    setDebitObj({ description: '', amount: 0 });\n  }\n\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={(e) => {\n        handleSubmit(e);\n      }}>\n        <input type=\"text\" name=\"description\" \n        value = {debitObj.description}\n        onChange={handleChange}\n        required/>\n        <input type=\"number\" name=\"amount\" \n       value = {debitObj.amount}\n       onChange={handleChange}\n       required/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() { \n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n    this.componentDidMount()\n  }\n\n  async componentDidMount(){\n    let creditResp = await axios.get(\"https://johnnylaicode.github.io/api/credits.json\");\n    let debitResp = await axios.get(\"https://johnnylaicode.github.io/api/debits.json\");\n\n    let creditsTotal = 0;\n    let debitsTotal = 0;\n    if (creditResp && creditResp.data && debitResp && debitResp.data) {\n      creditsTotal = creditResp.data.reduce((total, credit) => total + credit.amount, 0);\n      debitsTotal = debitResp.data.reduce((total, debit) => total + debit.amount, 0);\n    }\n    this.setState({\n      creditList : creditResp.data,\n      debitList : debitResp.data,\n      accountBalance : parseFloat(creditsTotal, 10) - parseFloat(debitsTotal, 10)\n    })\n  }\n\n\n  addCredit = (creditData) => {\n    this.setState({\n      creditList: [...this.state.creditList, creditData]\n    })\n    this.setState({accountBalance: this.state.accountBalance + parseFloat(creditData.amount, 10)})\n  }\n  addDebit = (debitData) => {\n    this.setState({\n      debitList: [...this.state.debitList, debitData]\n    })\n    this.setState({accountBalance: this.state.accountBalance - parseFloat(debitData.amount, 10)})\n  \n  }\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits addCredit={this.addCredit} credits={this.state.creditList} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance} />) \n    return (\n      <Router basename=\"/assignment-3-bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}